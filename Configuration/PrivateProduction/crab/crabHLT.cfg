[CRAB]

jobtype = cmssw
#scheduler = glitecoll
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = legnaro

[CMSSW]

### The data you want to access (to be found on DBS)
datasetpath = none

### The ParameterSet you want to use
pset = pset.py

### Splitting parameters
#total_number_of_events = -1
total_number_of_events = 1000000
events_per_job = 800
#number_of_jobs = 5

### The output files (comma separated list)
get_edm_output = 1

dataset_pu = /MinBias/Summer08_IDEAL_V11_redigi_v1/GEN-SIM-RAW

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

#ui_working_dir = /full/path/Name_of_Directory
#outputdir= /full/path/yourOutDir
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

#storage_element = T2_US_Wisconsin
storage_element = T2_DE_DESY
publish_data = 1
publish_data_name = dataset_name

dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet

#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[EDG]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list = wisc.edu
ce_white_list = desy.de

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

